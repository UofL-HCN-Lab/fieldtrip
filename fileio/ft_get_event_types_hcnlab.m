function [event_type_dict,task] = ft_get_event_types_hcnlab(cfg,task)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FUNCTION that maps event codes to event types for each task
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

verchk = arrayfun(@(x) real(str2double(x)),task);
if ~any(verchk)
    ft_warning(['No version number identified for task ' task '. Looking in '...
        'task directory to identify latest version.']);
    task = getLatestTaskVersion(cfg,task);
else
    if ~contains(task,'_v')
        idx = find(isnan(verchk),1,'last');
        task = [task(1:idx) '_v' task(idx+1:end)];
    end
end

switch task
    case {'SimonTask_v8';'SimonTask_v9';'SimonTask_v10'}
        event_type_dict = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,...
            24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45;...
            'Start_Trial','Fix_On','Fix_Off','Cue_On','Cue_Off','LEFT_Button_On','LEFT_Button_Off',...
            'RIGHT_Button_On','ML_Start_Trial','RIGHT_Button_Off','Early_Left_On_pre_recording',...
            'Early_Left_Off_pre_recording','Early_Right_On_pre_recording','Early_Right_Off_pre_recording',...
            'Early_Left_On_fixation','Early_Left_Off_fixation','Early_Right_On_fixation','ML_End_Trial',...
            'Early_Right_Off_fixation','Temp20','EarlyPress_ERROR_pre_recording','EarlyPress_ERROR_fixation',...
            'EarlyPress_ERROR_Pic_On','EarlyPress_ERROR_Pic_Off','NoResponse_ERROR','NoResponse_ERROR_Pic_On',...
            'NoResponse_ERROR_Pic_Off','Temp28','Temp29','Temp30','LateResponse_Left_On',...
            'LateResponse_Left_Off','LateResponse_Right_On','LateResponse_Right_Off',...
            'LateResponse_ERROR','Temp36','Temp37','Temp38','Temp39','Temp40','pre_recording_time_on',...
            'pre_recording_time_off','post_recording_time_on','post_recording_time_off','End_Trial'};
    case {'SimonTask_v11';'SimonTask_v12'}
        event_type_dict = {10,11,12,13,14,15,16,17,19,20,21,22,23,24;...
            'Cong_Left_Left','Cong_Left_Right','Cong_Left_NoResp','Cong_Right_Left',...
            'Cong_Right_Right','Cong_Right_NoResp','Abort_Early_Left','Abort_Early_Right',...
            'Incong_Left_Left','Incong_Left_Right','Incong_Left_NoResp','Incong_Right_Left',...
            'Incong_Right_Right','Incong_Right_NoResp'};
    case {'SimonTask_v13'}
        event_type_dict = {8,10,11,12,13,14,15,16,17,19,20,21,22,23,24;...
            'Instructions','Cong_Left_Left','Cong_Left_Right','Cong_Left_NoResp','Cong_Right_Left',...
            'Cong_Right_Right','Cong_Right_NoResp','Abort_Early_Left','Abort_Early_Right',...
            'Incong_Left_Left','Incong_Left_Right','Incong_Left_NoResp','Incong_Right_Left',...
            'Incong_Right_Right','Incong_Right_NoResp'};
    case {'StopTask_v2';'StopTask_v3'}
        event_type_dict = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21;...
            'Start_Trial','Fix_On','Fix_Off','Cue1_On','Cue1_Off','Cue2_On','Cue2_Off',...
            'NoEvent1','ML_Start_Trial','Left_Button_On','Left_Button_On_ERROR',...
            'Right_Button_On','Right_Button_On_ERROR','Early_Left_Button_On_fixation',...
            'Early_Right_Button_On_fixation','Early_Left_Button_On_cue1','Early_Right_Button_On_cue1',...
            'ML_End_Trial','NoResponse','NoResponse_ERROR','End_Trial'};
    case {'StopTask_v4'} % need to complete latest version that ports all necessary trial codes to AO
        event_type_dict = {12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30;...
            'Go_Left_Left','Go_Left_Right','Go_Left_NoResp','Go_Right_Left',...
            'Go_Right_Right','Go_Right_NoResp','Stop_Left_Left','Stop_Left_Right',...
            'Stop_Left_NoResp','Stop_Right_Left','Stop_Right_Right','Stop_Right_NoResp',...
            'Abort_Early_Left','Abort_Early_Right','Stop_Left_LeftBeforeStop',...
            'Stop_Left_RightBeforeStop','Stop_Right_LeftBeforeStop','Stop_Right_RightBeforeStop'};
    case 'BDMAuctionTask_v1'
        ft_error(['Task ' task ' not complete. Please add event type mappings ' ...
            'to ft_read_event_hcnlab_neuroomega.'])
    case 'RatingTask_v1'
        ft_error(['Task ' task ' not complete. Please add event type mappings ' ...
            'to ft_read_event_hcnlab_neuroomega.'])
    case 'RL4Task_v1'
        ft_error(['Task ' task ' not complete. Please add event type mappings ' ...
            'to ft_read_event_hcnlab_neuroomega.'])
    case 'FaceWordLocalizerTask_v1'
        ft_error(['Task ' task ' not complete. Please add event type mappings ' ...
            'to ft_read_event_hcnlab_neuroomega.'])
    otherwise
        ft_error(['Task ' task ' not recognized. Please check or add to ' ...
            'ft_read_event_hcnlab_neuroomega.'])
end
end